{"version":3,"sources":["css/Quiz.module.css","css/SwipeContainer.module.css","css/LikeDislikeContainer.module.css","css/FormEdit.module.css","components/Login.js","components/SwipeContainer.js","components/LikeDislikeContainer.js","components/Score.js","components/Quiz.js","components/FormEdit.js","images/editIcon.png","components/ProfileBar.js","components/MatchProfile.js","components/Profile.js","components/Signup.js","components/RouteNotFound.js","images/logo.png","Application.js","App.js","index.js"],"names":["module","exports","Login","accountCreated","login","useEffect","alert","history","useHistory","useState","error","setEmail","setPassword","className","Container","Alert","variant","Row","Col","Form","style","margin","marginTop","width","onSubmit","e","preventDefault","push","Label","Control","onChange","target","value","type","placeholder","Button","SwipeContainer","loading","randomiseUser","photo","userInfo","userBio","activities","word","isFlipped","setFlipped","handleClick","user","results","flipDirection","Card","styles","img","onClick","border","Img","src","Spinner","marginLeft","marginBottom","animation","role","Title","textAlign","as","name","first","last","Text","gender","charAt","toUpperCase","slice","dob","age","join","fontSize","LikeDislikeContainer","retrieveOnReload","saveSelectedUser","likedislikecontainer","Score","requiredScore","saveUserToMatches","score","saved","setSaved","Quiz","loggedInUser","calculateScore","renderScore","questions","isRandomised","setIsRandomised","isSubmitted","setSubmitted","Math","floor","random","cleanWord","borderRadius","map","each","index","scramble","answers","sort","a","b","question","answer","answerIndex","Check","inline","label","correctAnswer","id","updatedMatches","matches","firstName","lastName","bio","v4","fetch","method","headers","body","JSON","stringify","then","resp","json","data","console","log","catch","err","image","card","FormEdit","hideFormEdit","updateRenderFormEdit","existingQuiz","arr","setArr","requiredToMatch","setRequiredToMatch","blankError","setBlankError","useRef","block","setQuestions","setError","renderAnswer","firstAnswerBox","findFirstElement","find","list","handleInput","maxLength","backgroundColor","display","newArr","filter","splice","removeInput","renderQuestions","addition","copyOfQuestions","length","handleChange","blockRemoved","newObject","questionRemoved","removeQuestion","addInput","breakLoop","userQuiz","quiz","forEach","postUserQuiz","sm","Group","marginRight","column","max","min","required","position","bottom","left","ProfileBar","updateMatchRemoved","updateUserProfileInfo","removeFromMatches","updateUserMatches","matchProfileUpdate","userId","updateLoggedInUser","hideEdit","show","setShow","userObject","setUserObject","handleClose","key","split","Image","rounded","maxWidth","bg","text","Body","listStyle","right","cursor","editIcon","alt","Modal","onHide","Header","closeButton","rows","Select","Array","keys","i","trim","toString","preference","Footer","MatchProfile","fluid","Profile","match","renderFormEdit","setRenderFormEdit","submitSuccess","setSubmitSuccess","userProfileUpdated","setUserProfileUpdated","matchRemoved","setMatchRemoved","fetchForm","height","lg","setTimeout","background","padding","exact","path","transform","Offcanvas","placement","to","roundedCircle","renderMatches","Signup","submitUserSignup","email","password","handleSubmit","RouteNotFound","Application","isLoggedIn","setIsLoggedIn","setLoggedInUser","setUserBio","setPhoto","matchProfile","setMatchProfile","setScore","setActivities","userScore","setUserScore","setAccountCreated","setLoading","setUserInfo","getLoggedInUser","createUserInfo","userBioRandomiser","retrieveActivities","retrieveQuestions","matchUpdate","bool","askedQuestions","options","toLowerCase","fetchUserdata","urls","small","basename","Navbar","Logo","count","correct","found","update","profilePicture","favouriteActivities","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5751b5fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Quiz_card__pf4gY\",\"image\":\"Quiz_image__1sZd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"SwipeContainer_img__10mfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"likedislikecontainer\":\"LikeDislikeContainer_likedislikecontainer__cYeeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"FormEdit_formContainer__2q1rV\",\"formInput\":\"FormEdit_formInput__3V2ox\"};","import React, {useState, useEffect} from 'react'\nimport { Alert, Form, Button, Row, Col } from 'react-bootstrap'\nimport Container from 'react-bootstrap/Container';\nimport { useHistory } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../css/background.css'\n\nexport default function Login({ accountCreated, login}) {\n    useEffect(() => {\n        alert('Hello and welcome to a test version of CompatabL! A React-made, dating, web application! \\nAs you go through this app you will notice that not everything works as it should, this is because the app has been adapted to be run on github pages. ' \n        + '\\nNormally this app would require the use of a mock JSON server to persist user information and matches. What you see now is the most basic form of the application. To see it in all its glory please visit the link on the next alert and follow the install instructions.\\n\\n' \n        + 'Visit: \\n\\n https://github.com/D-Justice/CompatabL/tree/master/compatabl \\n\\nTo test the proper application or continue here to get an idea of it.\\nTo get started simply press the \"Login\" button\\n\\nNOTE: This app currently has no responsive design whatsoever so please use a PC and zoom in/out accordingly \\nEnjoy!')\n        \n    })\n    \n    \n    \n    const history = useHistory()\n    const [error, setError] = useState(false)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const handleSubmit = () => {\n        \n            let user = {\n                \"email\": \"test@test.com\",\n                \"firstName\": \"test\",\n                \"lastName\": \"test\",\n                \"password\": \"test\",\n                \"photo\": \"https://pixy.org/src/59/thumbs350/595036.jpg\",\n                \"bio\": \"Hi! I am brand new to online dating. While I’m still figuring this all out, here’s something I know for sure—I’m excited to be here! The chance to meet unique, engaging, and interesting women is pretty dang neat. If you think you might fit that mold, drop me a message. I work in the finance industry. And while I like to work hard, I make sure to leave time to enjoy life. I’m a fan of wine, movies, hiking, and getting out of town for the weekend. Let’s chat and see if maybe we’re a good fit!\",\n                \"age\": \"25\",\n                \"gender\": \"Male\",\n                \"preference\": \"Both\",\n                \"activities\": [\n                  \"running\",\n                  \"biking\",\n                  \"swimming\",\n                  \"surfing\"\n                ],\n                \"matches\": [],\n                \"userQuiz\": [],\n                \"id\": 3\n              }\n                \n                login(user)\n                history.push('/')\n\n      \n    }\n\n    \n    \n    return (\n        <div>\n            <div className='background'>\n            </div>\n\n            <div className='content'>\n            <Container >\n                {accountCreated && !error && <Alert variant='success'>Account created! Please log in to continue</Alert>}\n                <Row>\n                    <Col >\n                        <Form style={{margin: '0 auto', marginTop: '10%', width: '50%'}} onSubmit={(e) => {\n                            e.preventDefault()\n                            handleSubmit()\n                        }}>\n                            <Form.Label>Email: </Form.Label>\n                            <Form.Control onChange={(e) => setEmail(e.target.value)} type='email' placeholder='example@example.com'></Form.Control>\n\n                            <Form.Label>Password: </Form.Label>\n                            <Form.Control onChange={(e) => setPassword(e.target.value)} type='password' placeholder='password...'></Form.Control>\n                            {!!error && <Alert style={{marginTop: '1%'}}variant='danger'>Email or Password is incorrect</Alert>}\n                            <Button variant=\"primary\" type='submit' onSubmit={(e) => {\n                                e.preventDefault()\n                            }}>Log in</Button>\n                        </Form>\n\n                    </Col>\n                </Row>\n            </Container>\n            </div>\n        </div>\n    )\n}\n\n\n\n\n\n","import React, {useState, useEffect} from 'react'\nimport { Card, Spinner } from 'react-bootstrap'\nimport ReactCardFlip from 'react-card-flip'\nimport styles from '../css/SwipeContainer.module.css'\n\n\nfunction SwipeContainer({loading, randomiseUser, photo, userInfo, userBio, activities}) {\n    useEffect(() => {\n        randomiseUser()\n    \n      }, [])\n    \n    const [isFlipped, setFlipped] = useState(false)\n    const handleClick = (e) => {\n        e.preventDefault()\n        setFlipped(!isFlipped)\n\n    }\n    const cleanWord = (word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1)\n    }\n    const renderActivities = () => {\n        let splitActivities = activities.join(', ')\n        \n        return(splitActivities)\n    }\n\n    \n    let user = userInfo.results[0]\n    return(\n        <div>\n            \n            <ReactCardFlip isFlipped={isFlipped} flipDirection=\"vertical\">\n            <Card className={styles.img} onClick={handleClick} style={{ border: '2px solid black', margin: 'auto'}}>\n            {!loading && <Card.Img  src={photo} />}\n            {loading && <Spinner style={{marginLeft: '45%', marginTop: '20%', marginBottom: '20%'}}animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>}\n                <Card.Title style={{textAlign: 'center'}}as='h2'>{user.name.first} {user.name.last}</Card.Title>\n                <Card.Text>{cleanWord(user.gender)} {user.dob.age}</Card.Text>\n                <Card.Text as='small'>{renderActivities()}</Card.Text>\n            </Card>\n            <Card onClick={handleClick} style={{ border: '2px solid black', width: '50%', margin: 'auto'}}> \n                <Card.Title as='h1'>Biography</Card.Title>\n                <Card.Text style={{fontSize: '30px'}}>{userBio}</Card.Text>\n                \n            </Card>\n            </ReactCardFlip>\n        </div>\n    )\n}\n\n\nexport default SwipeContainer","import React from 'react'\nimport {Button} from 'react-bootstrap'\nimport styles from '../css/LikeDislikeContainer.module.css'\nimport { useHistory } from 'react-router-dom'\n\n\nfunction LikeDislikeContainer({retrieveOnReload, saveSelectedUser, randomiseUser}) {\n        let history = useHistory();\n\n        function handleClick() {\n            saveSelectedUser()\n            \n            history.push(\"/quiz\")\n        }\n    return(\n        <div className={styles.likedislikecontainer}>\n            <Button style={{fontSize: '30px'}} onClick={() => randomiseUser()} variant=\"danger\">👎</Button>\n            <Button style={{fontSize: '30px'}} onClick={handleClick} variant=\"success\">👍</Button>\n            \n        </div>\n    )\n}\n\n\nexport default LikeDislikeContainer","import React, { useState, useEffect } from 'react'\nimport { Button } from 'react-bootstrap'\n\n\nexport default function Score({requiredScore, saveUserToMatches, handleClick, score}) {\n    const [saved, setSaved] = useState(false)\n    useEffect(() => {\n        if(score >= requiredScore && !saved){\n            saveUserToMatches()\n        }\n        setSaved(true)\n    })\n    return (\n        <>\n            \n            <h1>Score: {score}</h1>\n            <h2 style={{fontSize: '45px', textAlign: 'center'}}>Its {score >= requiredScore ? 'a MATCH' : 'not a match...'}</h2>\n            {score < requiredScore && <><hr /><Button variant='primary' onClick={handleClick}>Try Again!</Button></>}\n            {score >= requiredScore &&\n                <>\n                    <p>Match has been saved to your profile!</p>\n                    <hr />\n                    <Button variant='primary' onClick={handleClick}>Keep Looking</Button>\n                </>\n            }\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap'\nimport Container from 'react-bootstrap/Container';\nimport styles from '../css/Quiz.module.css'\nimport { useHistory } from 'react-router-dom'\nimport Score from './Score'\nimport { v4 } from 'uuid';\n\n\n\n\nfunction Quiz({ loggedInUser, calculateScore, renderScore, score, questions, photo, userInfo, userBio, activities }) {\n    const [loading, setLoading] = useState(false)\n    const [isRandomised, setIsRandomised] = useState(false)\n    const [isSubmitted, setSubmitted] = useState(false)\n    const [requiredScore, setRequiredScore] = useState(Math.floor(Math.random() * (10 - 1) + 1))\n    let history = useHistory()\n\n\n    const cleanWord = (word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1)\n    }\n    const renderActivities = () => {\n        let splitActivities = activities.join(', ')\n\n        return (splitActivities)\n    }\n    const renderQuestions = () => {\n        return questions.map((each, index) => {\n            let scramble = each.answers\n            if (!isRandomised) {\n                scramble = scramble.sort((a,b) => 0.5 - Math.random())\n                setIsRandomised(true)\n            } \n            \n            return (\n                <>\n                    <Form.Label key={index}>{each.question}</Form.Label>\n                    <br />\n                    {scramble.map((answer, answerIndex) => {\n                        return (\n                            <Form.Check inline key={answerIndex} label={answer} name={index} type=\"radio\" onClick={(e) => renderScore(each.correctAnswer, answer, each.id)} id={`inline-${answerIndex}`} />\n                        )\n\n                    })}\n                    <hr />\n                </>\n            )\n        })\n    }\n    function handleClick() {\n\n        history.push('/')\n    }\n    const saveUserToMatches = () => {\n        let updatedMatches = loggedInUser.matches\n        updatedMatches.push({\n                    firstName: user.name.first,\n                    lastName: user.name.last,\n                    gender: cleanWord(user.gender),\n                    age: user.dob.age,\n                    activities: activities,\n                    bio: userBio,\n                    id: v4(),\n                    photo: photo})\n            \n        fetch(`http://localhost:4000/users/${loggedInUser.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                matches: updatedMatches\n            })\n        })\n        .then(resp => resp.json())\n        .then(data => console.log('Match has been saved!'))\n        .catch(err => console.error(err))\n\n    }\n    let user = userInfo.results[0]\n    \n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                    <h2 style={{textAlign: 'center'}}>Score required: {requiredScore} or more</h2>\n                        {!isSubmitted &&\n                            <Form style={{ border: '2px solid black', borderRadius: '25px' }}>\n                                \n                                {renderQuestions()}\n                                <Button type='submit' onClick={(e) => {\n                                    e.preventDefault()\n                                    setSubmitted(true)\n                                    calculateScore()\n                                }}>Submit</Button>\n                            </Form>\n                        }\n                        {isSubmitted && <Score handleClick={handleClick} requiredScore={requiredScore} saveUserToMatches={saveUserToMatches} score={score} />}\n                    </Col>\n                    <Col>\n                        <img className={styles.image} src={photo} />\n                        <Card className={styles.card}>\n\n\n                            <Card.Title style={{textAlign: 'center'}}as='h2'>{user.name.first} {user.name.last}</Card.Title>\n                            <Card.Text>{cleanWord(user.gender)} {user.dob.age}</Card.Text>\n                            <Card.Text as='small'>{renderActivities()}</Card.Text>\n                            <Card.Title as='h1'>Biography</Card.Title>\n                            <Card.Text style={{ fontSize: '15px' }}>{userBio}</Card.Text>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\n\nexport default Quiz","import React, { useState, useRef, useEffect } from 'react'\nimport { Form, Button, Row, Col, Alert } from 'react-bootstrap'\nimport { v4 } from 'uuid';\nimport '../css/FormEdit.module.css'\n\n\n\nexport default function FormEdit({hideFormEdit, updateRenderFormEdit, existingQuiz, user}) {\n    \n    var existingForm = []\n    existingQuiz = []\n    \n    const [arr, setArr] = useState(existingForm)\n    const [requiredToMatch, setRequiredToMatch] = useState(1)\n    const [blankError, setBlankError] = useState(false)\n    const quizForSubmit = useRef([])\n    const firstRender = useRef(false)\n    const [questions, setQuestions] = useState(existingQuiz.map((each, index) => {\n        return {\n            block: each.block,\n            value: [each.question]\n        }\n    }))\n    const [error, setError] = useState(false)\n\n    const addInput = (block, id) => {\n        const arrLength = arr.filter(each => each.block === block)\n\n        if (arrLength.length < 4) {\n            return setArr([...arr, { block: block, data: { id: id, value: '' } }])\n        }\n\n    }\n    \n    const removeInput = (block, id) => {\n        const newArr = [...arr]\n\n\n        let index = newArr.map((each, index) => {\n            if (each.data.id === id && each.block === block) {\n                return index\n            } else {\n                return ''\n            }\n        })\n\n        index = index.filter(each => each !== '')\n        newArr.splice(index, 1)\n        setArr(newArr)\n    }\n    const handleInput = (e, index) => {\n        const { name, value } = e.target\n        const list = [...arr];\n        list[index].data[name] = value\n\n        setArr(list)\n    }\n    const removeQuestion = (e, block) => {\n        setError(false)\n\n        let newArr = [...arr]\n        let blockRemoved = newArr.map((each, index) => {\n            if (each.block === block) {\n                return ''\n            } else {\n                \n                return each\n            }\n        })\n        blockRemoved = blockRemoved.filter(each => each !== '')\n        blockRemoved = blockRemoved.map((each, index) => {\n            const newObject = {...each}\n            if (each.block > block) {\n                newObject.block -= 1 \n            }\n            \n            \n            return newObject\n        })\n        \n        let questionRemoved = questions.map((each, index) => {\n            if(each.block === block) {\n               return '' \n            } else {\n                return each\n            }\n        })\n        questionRemoved = questionRemoved.filter(each => each !=='')\n        questionRemoved = questionRemoved.map((each, index) => {\n            const newObject = {...each}\n            if (each.block > block) {\n                newObject.block -= 1 \n            }\n            \n            \n            return newObject\n        })\n\n        \n        setQuestions(questionRemoved)\n        setArr(blockRemoved)\n\n    }\n \n    const postUserQuiz = (quiz, breakLoop) => {\n        if (!breakLoop) {\n            fetch(`http://localhost:4000/users/${user.id}`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    requiredToMatch: requiredToMatch,\n                    userQuiz: quiz\n                })\n            })\n            .then(resp => resp.json())\n            .then(data => updateRenderFormEdit())\n            .catch(err => console.error(err))\n        quiz.forEach(each => {\n            \n            fetch(`http://localhost:4000/questions`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(each)\n    \n            })\n            .then(resp => resp.json())\n            .then(data => data)\n            .catch(err => console.error(err))\n\n        })\n        }\n        \n        \n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        var breakLoop = false\n        const userQuiz = questions.map((each, index) => {\n            if(!breakLoop) {\n                let answer = arr.map((e, index) => {\n                    if (each.block === e.block) {\n                        if (e.data.value !== '') {\n                            return e.data.value\n                        }\n                        return e.data.value\n                    }else {\n                        return ''\n                    }})\n                let correctAnswer = arr.map((e, index) => {\n                    if (each.block === e.block) {\n                        if (e.data.value !== '') {\n                            return e.data.value\n                        }\n                    } else {\n                        return ''\n                    }\n                })\n                answer = answer.filter(each => each !== '')\n                correctAnswer = correctAnswer.filter(each => each !== '')[0]\n                \n                if (each.value[0] !== '') {\n                    if(answer.length > 1) {\n                        setBlankError(false)\n                        return {\n                            question: each.value[0],\n                            answers: answer,\n                            correctAnswer: correctAnswer,\n                            block: each.block,\n                            data: {\n                                id: arr[index].data.id,\n                                value: arr[index].data.value\n                            }\n                        }\n                    } else {\n                        setBlankError(true)\n                        breakLoop = true\n                    }\n                    \n                }\n                else {\n                    setBlankError(true)\n                    breakLoop = true\n                    \n                }\n            } \n            \n            \n        })\n       \n        postUserQuiz(userQuiz.filter(each => each !== ''), breakLoop)\n        \n        \n\n    }\n    const handleChange = (e, block) => {\n        const addition = { block: block, value: [e.target.value] }\n        if (!questions) {\n            setQuestions([addition])\n        } else {\n            const copyOfQuestions = [...questions]\n            let index = copyOfQuestions.map((each, index) => {\n                if (each.block === block) {\n                    return index\n                } else {\n                    return ''\n                }\n            })\n            index = index.filter(each => each !== '')\n            if (index.length > 0) {\n\n                copyOfQuestions[index] = addition\n                setQuestions([...copyOfQuestions])\n            } else {\n\n                setQuestions([...copyOfQuestions, addition])\n            }\n        }\n        \n\n    }\n    const renderAnswer = (block) => {\n        var firstAnswerBox = false;\n        \n        return arr.map((each, index) => {\n            let id = each.data.id\n            \n            let findFirstElement = arr.find((each, index) => {\n                if (each.block === block) {\n                    return id\n                }\n            })\n            \n            if (each.block === block) {\n                firstAnswerBox = findFirstElement.data.id === each.data.id\n                \n                return (<div>\n                    <Form.Control onChange={e => handleInput(e, index)} name=\"value\" value={each.data.value} maxLength={50} style={{ backgroundColor: firstAnswerBox ?'#ddffdd': '#FF7F7F', display: 'inline-block', width: '90%' }} />\n                    <Button onClick={(e) => removeInput(block, id)} style={{ display: 'inline-block' }}>X</Button>\n                </div>)\n            }\n            firstAnswerBox = 0\n\n        })\n    }\n    const renderQuestions = (block) => {\n        return (<div className={block}><Form.Control name={block} value={questions[block].value[0]} onChange={(e) => handleChange(e, block)} maxLength={150} style={{ width: '90%', marginTop: '1%', marginBottom: '1%', display: 'inline-block' }} placeholder=\"Enter Question\"></Form.Control><Button onClick={(e) => removeQuestion(e, block)} style={{ display: 'inline-block' }}>X</Button>\n            {renderAnswer(block)}\n            {<Button name={1} onClick={() => addInput(block, v4())}>Add Answer</Button>}\n        </div>)\n    }\n    return (\n        <div>\n            \n            \n            <Form onSubmit={handleSubmit}>\n                \n                {questions.map((each, index) => renderQuestions(index))}\n                {error && questions.length > 9 && <Alert variant='danger'> Max number of questions reached. </Alert>}\n                {blankError && <Alert variant='danger'>Please fill out or delete blank questions/answers. Each question must have 2 or more answers</Alert>}\n                \n\n                <Col sm='8'>\n                <Form.Group style={{marginTop: '10px'}} as={Row}>\n                <Form.Label style={{fontSize: '25px', marginTop: '-10px', marginRight: '-30px'}}column sm='4' >Score required to match: </Form.Label>\n                \n                <Col sm='1'>\n                <Form.Control type='number' max={questions.length} min='1' onChange={(e) => setRequiredToMatch(e.target.value)} name='requiredScore' required></Form.Control>\n                </Col>\n                <Col sm='1'>\n                    <Form.Label className='questionLength' style={{marginLeft: '-45px'}} as='h4'>/ {questions.length}</Form.Label>\n                </Col>\n                </Form.Group>\n                </Col>\n                <Button  onClick={() => {\n                    if(questions.length < 10) {\n                        return setQuestions([...questions, {block: questions.length, value: ['']}])\n                    } else {\n                        setError(true)\n                    }\n                    }}>Add Question</Button>\n                <Button onClick={() => console.log(blankError)} style={{ marginLeft: '1%' }} type='submit' variant='danger'>Submit</Button>\n            </Form>\n            <Button variant='danger' style={{position: 'absolute', bottom: '10px', left: '15px'}} onClick={hideFormEdit}>Back</Button>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/editIcon.3f69390c.png\";","import React, { useEffect, useState } from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\";\n\nimport Image from 'react-bootstrap/Image'\nimport Modal from 'react-bootstrap/Modal'\nimport editIcon from '../images/editIcon.png'\n\n\nexport default function ProfileBar({ updateMatchRemoved, updateUserProfileInfo, updateUserMatches, matchProfileUpdate, loggedInUser, userId, removeFromMatches, updateLoggedInUser, user, hideEdit }) {\n    const history = useHistory()\n    const { activities = [] } = user\n    const [show, setShow] = useState(false)\n    const [userObject, setUserObject] = useState(user)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const fallBackPhoto = 'https://icon-library.com/images/no-profile-picture-icon-female/no-profile-picture-icon-female-0.jpg'\n\n\n    useEffect(() => {\n        setUserObject(user)\n    }, [user])\n    const renderAge = () => {\n        let oneHundredArray = [30, ...Array(100).keys()]\n\n        return oneHundredArray.map(((each, i) => {\n            if (i > 18) {\n                return <option value={each}>{each}</option>\n            }\n\n        }))\n\n    }\n    const handleChange = (key, value) => {\n        if (key === 'activities') {\n            value = value.split(',')\n            console.log(value)\n        }\n        \n        setUserObject({ ...userObject, [key]: value })\n        console.log('user', userObject)\n\n\n    }\n    const handleRemove = () => {\n\n\n        // fetch(`http://localhost:4000/users/${userId}`, {\n        //     method: 'PUT',\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //     },\n        //     body: JSON.stringify({\n        //         ...loggedInUser,\n        //         matches: loggedInUser.matches.filter(each => {\n        //             if (user.id !== each.id) {\n        //                 return each\n        //             }\n        //         })\n        //     })\n        // })\n        // .then(resp => resp.json())\n        // .then(data => {\n        //     matchProfileUpdate(false)\n        //     updateUserMatches(data.matches)\n        //     updateMatchRemoved()\n        //     history.push('/profile')\n        // })\n    }\n    const updateUserProfile = () => {\n        // fetch(`http://localhost:4000/users/${user.id}`, {\n        //     method: 'PATCH',\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //     },\n        //     body: JSON.stringify({\n        //         firstName: userObject.firstName,\n        //         lastName: userObject.lastName,\n        //         photo: userObject.photo,\n        //         age: userObject.age,\n        //         bio: userObject.bio,\n        //         activities: userObject.activities,\n        //         preference: userObject.preference\n        //     })\n        // })\n        //     .then(resp => resp.json())\n        //     .then(data => updateLoggedInUser(userObject))\n        //     .catch(err => console.error(err))\n\n    }\n    console.log('userObject', userObject)\n    return (\n        <div>\n            <Image src={userObject.photo} rounded style={{ border: '3px solid black', maxWidth: '400px' }} />\n            <div style={{ backgroundColor: 'red' }}>\n                <Card bg={'dark'} text={'light'} style={{}}>\n                    { removeFromMatches && <Button onClick={handleRemove} style={{display: 'inline-block', width: '20%', margin: '1%'}} variant='danger'>Remove From Matches</Button>}\n                    <Card.Body  as='h3'>{userObject.firstName} {userObject.lastName}</Card.Body>\n                    <hr />\n                    <Card.Body >\n                        <>\n                            <b>Bio:</b><br />\n                            {userObject.bio}<br /><hr />\n                            Age: {userObject.age} <br />\n                            Gender: {userObject.gender} <br />\n                            Favourite Activities:\n                            <ul style={{ listStyle: 'none', marginLeft: '40%' }}>\n                                {activities.map((each, index) => {\n                                    return <li style={{ textAlign: 'left' }}>- {each}</li>\n                                })}\n                            </ul>\n                        </>\n                        {!hideEdit && <Image onClick={handleShow} style={{ position: 'absolute', right: '5px', bottom: '5px', fontSize: '5px', width: '20px', cursor: 'pointer' }} src={editIcon} alt='edit profile button' />}\n                    </Card.Body>\n\n\n                </Card>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Edit profile information</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form onSubmit={(e) => {\n                            e.preventDefault()\n                            updateUserProfile()\n                            updateUserProfileInfo()\n                            handleClose()\n\n                        }}>\n                            <Form.Group>\n                            <Form.Label >First Name</Form.Label>\n                                \n                                <Form.Control onChange={(e) => handleChange(e.target.name, e.target.value)} as='textarea' rows={1} name='firstName' placeholder='first name'>{user.firstName}</Form.Control>\n                            \n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label >Last Name</Form.Label>\n                                \n                                <Form.Control onChange={(e) => handleChange(e.target.name, e.target.value)} as='textarea' rows={1} name='lastName' placeholder='last name'>{user.lastName}</Form.Control>\n                            \n                        </Form.Group>\n                        <Form.Group>\n                                <Form.Label >User Bio</Form.Label>\n                                \n                                    <Form.Control onChange={(e) => handleChange(e.target.name, e.target.value)} as='textarea' name='bio' placeholder='Enter your biography...'>{user.bio}</Form.Control>\n                                \n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Age</Form.Label>\n                                <Form.Select onChange={(e) => handleChange(e.target.name, e.target.value)} name='age'>\n                                    <option value={user.age}>{user.age}</option>\n                                    {renderAge()}\n                                </Form.Select>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Profile Picture</Form.Label>\n                                <Form.Control onChange={(e) => handleChange(e.target.name, e.target.value.trim() === '' ? fallBackPhoto : e.target.value)} name='photo'></Form.Control>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Activities</Form.Label>\n                                <Form.Control onChange={(e) => handleChange(e.target.name, e.target.value)} as='textarea' placeholder={userObject.activities.toString()} name='activities' >{userObject.activities.toString()}</Form.Control>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Preference</Form.Label>\n                                <Form.Select onChange={(e) => handleChange(e.target.name, e.target.value)} name='preference' >\n                                <option value={user.preference}>{user.preference}</option>\n                                <option value='Female'>Female</option>\n                                <option value='Male'>Male</option>\n                                <option value='Both'>Both</option>\n                                </Form.Select>\n                            </Form.Group>\n                            <Modal.Footer>\n                                <Button onClick={handleClose} variant=\"secondary\">Close</Button>\n                                <Button type='submit' variant=\"primary\">Save changes</Button>\n                            </Modal.Footer>\n\n                        </Form>\n\n                    </Modal.Body>\n                </Modal>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { Button, Row, Col } from 'react-bootstrap'\nimport Container from 'react-bootstrap/Container';\nimport ProfileBar from './ProfileBar'\n\n\n\n\nexport default function MatchProfile({updateMatchRemoved, updateUserMatches, matchProfileUpdate, loggedInUser, userId, user }) {\n\n    \n\n    return (\n        <div>\n            <Container fluid>\n                <Row>\n                    <Col>\n                        <ProfileBar updateMatchRemoved={updateMatchRemoved} updateUserMatches={updateUserMatches} matchProfileUpdate={matchProfileUpdate} loggedInUser={loggedInUser} userId={userId} removeFromMatches={true} user={user} hideEdit={true}/>\n                    </Col>\n                    \n\n\n                </Row>\n\n\n            </Container>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport '../css/Profile.module.css'\nimport { Alert, Button, Row, Col } from 'react-bootstrap'\nimport Offcanvas from 'react-bootstrap/Offcanvas'\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image'\nimport FormEdit from './FormEdit'\nimport ProfileBar from './ProfileBar'\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport MatchProfile from './MatchProfile';\n\n\nexport default function Profile({ updateLoggedInUser, user, match, matchProfileUpdate }) {\n    const [renderFormEdit, setRenderFormEdit] = useState(false)\n    const [userQuiz, setUserQuiz] = useState()\n    const [show, setShow] = useState(false)\n    const [submitSuccess, setSubmitSuccess] = useState(false)\n    const [userProfileUpdated, setUserProfileUpdated] = useState(false)\n    const [matchRemoved, setMatchRemoved] = useState(false)\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const renderMatches = (match, key) => {\n        return (\n            <>\n\n                <Link to={'/profile/' + match.id}>\n\n                    <Image key={key} src={match.photo} onClick={() => matchProfileUpdate(match)} roundedCircle style={{ height: '100px', width: '100px', display: 'inline-block', marginLeft: '1%' }} />\n                </Link>\n\n            </>\n\n        )\n    }\n    const updateUserMatches = (matches) => {\n        user.matches = matches\n    }\n    const updateUserProfileInfo = () => {\n        setUserProfileUpdated(true)\n        setTimeout(() => setUserProfileUpdated(false), 3000)\n\n    }\n    const updateMatchRemoved = () => {\n        setMatchRemoved(true)\n        setTimeout(() => setMatchRemoved(false), 3000)\n    }\n    function fetchForm() {\n        // fetch('http://localhost:4000/users')\n        //     .then(resp => resp.json())\n        //     .then(data => {\n        //         let existingForm = data.map((each, index) => {\n        //             if (each.email === user.email) {\n        //                 return each\n        //             }\n        //         })\n\n        //         existingForm = existingForm.filter(each => each !== undefined)\n        //         if (existingForm.length > 0) {\n        //             setUserQuiz(existingForm[0].userQuiz)\n        //         } else {\n        //             setUserQuiz([])\n        //         }\n                \n        //     })\n        //     .catch(err => console.error(err))\n\n    }\n    useEffect(() => {\n        fetchForm()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [renderFormEdit])\n    const retrieveExistingForm = () => {\n            \n            setRenderFormEdit(true)\n    }\n    const hideFormEdit = () => {\n        setRenderFormEdit(false)\n    }\n    const renderSavedQuiz = () => {\n        \n        return userQuiz.map((each, index) => {\n            return <li>{each.question}</li>\n        })\n\n\n    }\n    const updateRenderFormEdit = () => {\n        setRenderFormEdit(false)\n        setSubmitSuccess(true)\n        setTimeout(() => setSubmitSuccess(false), 4000)\n    }\n    const matches = [\n        {\n          \"firstName\": \"Nieves\",\n          \"lastName\": \"Calvo\",\n          \"gender\": \"Female\",\n          \"age\": 61,\n          \"activities\": [\n            \"Storm Chasing\",\n            \"Woodworking\",\n            \"Soap Making\",\n            \"jogging\"\n          ],\n          \"bio\": \"Isn’t online dating a blast? Okay, maybe it can be challenging at times, but it’s still exciting that you have the chance to meet someone special who you might have never met elsewhere. I’m a proud dog mom, an avid gym-goer, and, if you ask my friends, a bit quirky at times. I’m looking for a man who compliments my life and is ready to enjoy all that this world has to bring to the table. If you think we might be a good match, send me a message.\",\n          \"id\": \"55b40f51-13c4-4679-b88c-ad10c2743d8a\",\n          \"photo\": \"https://images.unsplash.com/flagged/photo-1564485377544-ce65ce5187df?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNjUwNTR8MHwxfHJhbmRvbXx8fHx8fHx8fDE2MzQ0Njk4OTY&ixlib=rb-1.2.1&q=80&w=400\"\n        }\n      ]\n    return (\n        <div style={{ height: '100%' }}>\n            {submitSuccess && <Alert variant='success'>Quiz successfully submitted!</Alert>}\n            {userProfileUpdated && <Alert variant='success'>Profile information successfully updated</Alert>}\n            {matchRemoved && <Alert variant='danger'>User has been removed from matches</Alert> }\n\n            <Router>\n                <Container fluid>\n                    <Row>\n                        {!match && <Col lg={3}>\n                            <ProfileBar updateUserProfileInfo={updateUserProfileInfo} matchProfileUpdate={matchProfileUpdate} removeFromMatches={false} updateLoggedInUser={updateLoggedInUser} fetchForm={fetchForm} user={user} hideEdit={false}/>\n                        </Col>}\n                        {!match && <Col style={{ position: 'relative', borderRadius: '25px', background: 'lightgrey', marginRight: '10px' }}>\n\n\n                            {!renderFormEdit && userQuiz && <div style={{backgroundColor: 'darkgrey', marginTop: '10px', width: '60%', borderRadius: '25px', padding: '5px'}}><h2>Current User Questions</h2>\n                                <ul style={{ textAlign: 'left' , }}>\n                                    {renderSavedQuiz()}\n                                </ul></div>}\n                            {!renderFormEdit && !match && <Button onClick={() => {\n                                retrieveExistingForm()\n\n                            }} style={{ fontSize: '40px', marginTop: '10%' }}>Add/Edit Quiz</Button>}\n\n                            {renderFormEdit && !match && <FormEdit hideFormEdit={hideFormEdit} updateRenderFormEdit={updateRenderFormEdit} existingQuiz={userQuiz} user={user} />}\n\n\n\n\n                        </Col>}\n                        {match && <Col lg={8} style={{ margin: 'auto' }}>\n                            <Route exact path=\"/profile/:id\"><MatchProfile updateMatchRemoved={updateMatchRemoved} updateUserMatches={updateUserMatches} matchProfileUpdate={matchProfileUpdate} loggedInUser={user} userId={user.id} user={match} /></Route>\n\n                        </Col>}\n\n\n                    </Row>\n\n\n                    <Row>\n                        <Col lg={9}>\n                        </Col>\n                        <Col lg={3}>\n                            <Button style={{ width: '10%', position: 'absolute', bottom: '100px', right: '-66.5px', fontSize: '30px', transform: 'rotate(270deg)' }} variant='primary' onClick={handleShow}>Matches</Button>\n                            <Offcanvas placement={'end'} show={show} onHide={handleClose}>\n                                <Offcanvas.Header closeButton>\n                                    <Offcanvas.Title>Matches: </Offcanvas.Title>\n                                </Offcanvas.Header>\n                                <Offcanvas.Body>\n\n                                    {matches.map((match, index) => renderMatches(match, index))}\n\n\n\n\n                                </Offcanvas.Body>\n                            </Offcanvas>\n                        </Col>\n                    </Row>\n\n\n\n                </Container>\n            </Router>\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport { Alert, Form, Button, Row, Col } from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport ProfileBar from './ProfileBar';\n\n\n\nexport default function Signup({submitUserSignup}) {\n    const history = useHistory()\n    const [userObject, setUserObject] = useState({bio: '', activities: []})\n    const [error, setError] = useState(false)\n    const handleSubmit = () => {\n        const {\n            email,\n            firstName,\n            lastName,\n            password,\n            photo,\n            bio,\n            age,\n            gender,\n            activities,\n            preference\n        } = userObject\n        if (email && firstName && lastName && password && photo && preference) {\n            submitUserSignup(email, firstName, lastName, password, photo, bio, age, gender, activities, preference)\n            history.push('/login')\n            setError(false)\n        } else {\n            setError(true)\n        }\n        \n    }\n    const renderAge = () => {\n        let oneHundredArray = [30, ...Array(100).keys()]\n        \n        return oneHundredArray.map(((each, i) => {\n                if (i > 18) {\n                    return <option value={each}>{each}</option>\n                }\n                \n        }))\n             \n    }\n    const handleChange = (key, value) => {\n        if (key === 'activities') {\n            value = value.split(',')\n            console.log(value)\n        }\n\n        setUserObject({...userObject, [key] : value})\n        \n\n        }\n    const formElements = () => {\n        return (        <>       \n                        <Form.Group className=\"mb-3\">\n                                <Form.Label>Email address *</Form.Label>\n                                <Form.Control onChange={(e)=> handleChange(e.target.name, e.target.value)} name='email' type=\"text\" placeholder=\"yourname@example.com\" />\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>First Name *</Form.Label>\n                                <Form.Control onChange={(e)=> handleChange(e.target.name, e.target.value)} name='firstName' type=\"text\" placeholder=\"first name\"></Form.Control>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Last Name *</Form.Label>\n                                <Form.Control onChange={(e)=> handleChange(e.target.name, e.target.value)} name='lastName' type=\"text\" placeholder=\"last name\"></Form.Control>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Password *</Form.Label>\n                                <Form.Control onChange={(e)=> handleChange(e.target.name, e.target.value)} name='password' type=\"password\" placeholder=\"password\"></Form.Control>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Profile picture *</Form.Label>\n                                <Form.Control onChange={(e)=> handleChange(e.target.name, e.target.value)} name='photo' type=\"text\" placeholder=\"image URL\"></Form.Control>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Bio (400 characters)</Form.Label>\n                                <Form.Control onChange={(e)=> handleChange(e.target.name, e.target.value)} maxLength={400} name='bio' as=\"textarea\" rows={3} placeholder=\"biography -- can be edited later\"></Form.Control>\n                                <Form.Label >{400 - userObject.bio.split('').length} Characters left</Form.Label>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Age</Form.Label>\n                                <Form.Select onChange={(e)=> handleChange(e.target.name, e.target.value)} name='age'>\n                                    <option value='default'>Please select your age </option>\n                                    {renderAge()}\n                                </Form.Select>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Gender</Form.Label>\n                                <Form.Select onChange={(e)=> handleChange(e.target.name, e.target.value)} name='gender'>\n                                    <option value='N/A'>Please select your gender</option>\n                                    <option value='Female'>Female</option>\n                                    <option value='Male'>Male</option>\n                                    <option value='Other'>Other</option>\n                                    <option value='N/A'>Rather Not Say</option>\n\n                                </Form.Select>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Favourite Activities (Max 4)</Form.Label>\n                                <Form.Control onChange={(e)=> handleChange(e.target.name, e.target.value)} name='activities' type=\"text\" placeholder=\"favourite activities (seperated by a ',')\"></Form.Control>\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Preference*</Form.Label>\n                                <Form.Select onChange={(e)=> handleChange(e.target.name, e.target.value)} name='preference'>\n                                    <option value='N/A'>Please select preference</option>\n                                    <option value='Female'>Female</option>\n                                    <option value='Male'>Male</option>\n                                    <option value='Both'>Both</option>\n\n                                </Form.Select>\n                            </Form.Group></>)\n    }\n        console.log('userObject', userObject)\n    return (\n        <div>\n            <h1>Signup page</h1>\n            <Container>\n                <Row>\n                    <Col lg={7}>\n\n                        <Form onSubmit={(e) => {\n                            e.preventDefault()\n                            handleSubmit()\n                        }}>\n                            {error && <Alert variant='danger'>Please fill in all boxes with an '*' next to them </Alert>}\n                            {formElements()}\n\n                            <Button type='submit' onSubmit={(e)=>e.preventDefault()} variant=\"danger\">Create</Button>\n                        </Form>\n\n                    </Col>\n                    <Col lg={5}>\n                        {userObject && <ProfileBar user={userObject} hideEdit={true}/> }\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\n\n\n\n\n","import React from 'react'\n\n\nexport default function RouteNotFound() {\n    \n\n    \n    \n    return (\n        <div>\n            <p>Youve been logged out</p>\n        </div>\n    )\n}\n\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/logo.0d449e83.png\";","import React, { useState, useEffect } from \"react\";\nimport Login from './components/Login'\nimport SwipeContainer from \"./components/SwipeContainer\";\nimport LikeDislikeContainer from \"./components/LikeDislikeContainer\";\nimport Quiz from './components/Quiz'\nimport Profile from './components/Profile'\nimport Signup from './components/Signup'\nimport { Navbar, Button } from \"react-bootstrap\";\nimport RouteNotFound from './components/RouteNotFound'\nimport Logo from './images/logo.png'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nimport './App.css'\n\n\nfunction Application() {\n  const apiLink = 'https://api.unsplash.com/'\n  const activityUrl = 'http://localhost:4000/hobbies'\n  const bioUrl = 'http://localhost:4000/biographies'\n  const userInfoAPI = 'https://randomuser.me/api/'\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [loggedInUser, setLoggedInUser] = useState()\n  const [userBio, setUserBio] = useState('')\n  const [photo, setPhoto] = useState('')\n  const [matchProfile, setMatchProfile] = useState()\n  const [score, setScore] = useState(0)\n  const [activities, setActivities] = useState([])\n  const [questions, setQuestions] = useState([])\n  const [userScore, setUserScore] = useState([])\n  const [accountCreated, setAccountCreated] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [userInfo, setUserInfo] = useState({\n    \"results\": [\n      {\n        \"gender\": \"loading\",\n        \"name\": {\n\n          \"first\": \"Loading\",\n          \"last\": \"\"\n        },\n\n        \"dob\": {\n          \"age\": 'loading'\n        },\n\n        \"picture\": {\n          \"large\": \"https://randomuser.me/api/portraits/men/75.jpg\",\n          \"medium\": \"https://randomuser.me/api/portraits/med/men/75.jpg\",\n          \"thumbnail\": \"https://randomuser.me/api/portraits/thumb/men/75.jpg\"\n        }\n      }\n    ]\n  })\n\n  useEffect(() => {\n    getLoggedInUser()\n  }, [])\n  const randomiseUser = () => {\n    createUserInfo()\n\n    userBioRandomiser()\n    retrieveActivities()\n    retrieveQuestions()\n\n\n  }\n  const matchUpdate = (bool) => {\n    setMatchProfile(bool)\n  }\n  const getLoggedInUser = () => {\n    // setLoading(true)\n    // return fetch('http://localhost:4000/loggedInUser')\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   setLoading(false)\n    //   setLoggedInUser(data)})\n    // .catch(err => console.error(err))\n  }\n  const renderScore = (correctAnswer, answer, id) => {\n    let found = userScore.map((each, index) => {\n      if (each.id === id) {\n        return index\n      }\n\n    })\n    found = found.filter(each => (typeof each) === 'number')\n    if (found.length === 1) {\n      userScore.splice(found[0], 1)\n      setUserScore([...userScore, { id: id, correct: (correctAnswer === answer) }])\n\n    }\n    else {\n\n      setUserScore([...userScore, { id: id, correct: (correctAnswer === answer) }])\n    }\n\n\n\n  }\n  const calculateScore = () => {\n    let count = 0\n    userScore.map((each, index) => {\n\n      if (each.correct === true) {\n        return count += 1\n      }\n    })\n    setUserScore([])\n    setScore(count)\n    count = 0\n  }\n  const submitUserSignup = (email, firstName, lastName, password, profilePicture, userBio, age, gender, favouriteActivities, preference) => {\n    fetch(`http://localhost:4000/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        firstName: firstName,\n        lastName: lastName,\n        password: password,\n        photo: profilePicture,\n        bio: userBio,\n        age: age,\n        gender: gender,\n        preference: preference,\n        activities: favouriteActivities.map((each, index) => {\n          if (index < 4) {\n            return each\n          } else {\n            return ''\n          }\n        }).filter(each => each !== ''),\n        matches: [],\n        userQuiz: [],\n      })\n\n    })\n      .then(resp => resp.json())\n      .then(data => setAccountCreated(true))\n      .catch(err => console.error(err))\n  }\n  const login = (user) => {\n    console.log('user',user)\n    // fetch('http://localhost:4000/loggedInUser/1', {\n    //   method:'PATCH',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   }, \n    //   body: JSON.stringify({user})\n      \n    // })\n    // .then(resp => resp.json())\n    // .then(data => {\n    //   setIsLoggedIn(true)})\n    // .catch(err => console.error(err))\n    setIsLoggedIn(true)\n    setLoggedInUser(user)\n  }\n  const saveSelectedUser = () => {\n    fetch(`http://localhost:4000/selectedUser/1`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userInfo: userInfo,\n        photo: photo,\n        userBio: userBio,\n        activities: activities\n      })\n    })\n      .then(resp => {\n        setLoading(true)\n        resp.json()\n      })\n      .then(data => setLoading(false))\n      .catch(error => console.error(error))\n  }\n  const retrieveQuestions = () => {\n        let data = [\n          {\n            \"id\": 1,\n            \"question\": \"I’VE BEEN WATCHING X. ANY GOOD MOVIES OR TV SHOWS?\",\n            \"answers\": [\n              \"yes\",\n              \"no\",\n              \"X-men\",\n              \"idk\"\n            ],\n            \"correctAnswer\": \"X-men\"\n          },\n          {\n            \"id\": 2,\n            \"question\": \"What's your biggest fear??\",\n            \"answers\": [\n              \"Spiders\",\n              \"Death\",\n              \"Clowns\",\n              \"Batman\"\n            ],\n            \"correctAnswer\": \"Batman\"\n          },\n          {\n            \"id\": 3,\n            \"question\": \"Want to guess what my passive-aggressive coworker emailed me today?\",\n            \"answers\": [\n              \"yes\",\n              \"no\",\n              \"something stupid?\",\n              \"idk\"\n            ],\n            \"correctAnswer\": \"something stupid?\"\n          },\n          {\n            \"id\": 4,\n            \"question\": \"If I pay for drinks, can I complain about my terrible roommate clogging the sink again?\",\n            \"answers\": [\n              \"yes\",\n              \"no\",\n              \"If you want\",\n              \"idk\"\n            ],\n            \"correctAnswer\": \"If you want\"\n          },\n          {\n            \"id\": 5,\n            \"question\": \"While walking: Music or Podcasts??\",\n            \"answers\": [\n              \"Music\",\n              \"Podcasts\",\n              \"Neither\"\n            ],\n            \"correctAnswer\": \"Music\"\n          },\n          {\n            \"id\": 6,\n            \"question\": \"So, you married?\",\n            \"answers\": [\n              \"yes\",\n              \"no\"\n            ],\n            \"correctAnswer\": \"no\"\n          },\n          {\n            \"id\": 7,\n            \"question\": \"Cutest animal?\",\n            \"answers\": [\n              \"Dog\",\n              \"Cat\",\n              \"Frog\",\n              \"Camel\"\n            ],\n            \"correctAnswer\": \"Dog\"\n          },\n          {\n            \"id\": 8,\n            \"question\": \"Dog or Cat?\",\n            \"answers\": [\n              \"Dog\",\n              \"Cat\",\n              \"Neither\"\n            ],\n            \"correctAnswer\": \"Dog\"\n          },\n          {\n            \"id\": 9,\n            \"question\": \"Netflix or YouTube?\",\n            \"answers\": [\n              \"Netflix\",\n              \"YouTube\",\n              \"Neither\"\n            ],\n            \"correctAnswer\": \"Netflix\"\n          },\n          {\n            \"id\": 10,\n            \"question\": \"Phone Call or Text?\",\n            \"answers\": [\n              \"Phone Call\",\n              \"Text\",\n              \"FaceTime\"\n            ],\n            \"correctAnswer\": \"Text\"\n          },\n          {\n            \"id\": 11,\n            \"question\": \"Toast or Eggs?\",\n            \"answers\": [\n              \"Toast\",\n              \"Eggs\",\n              \"Both\"\n            ],\n            \"correctAnswer\": \"Both\"\n          },\n          {\n            \"id\": 12,\n            \"question\": \"Cardio or Weights?\",\n            \"answers\": [\n              \"Cardio\",\n              \"Weights\",\n              \"Both\",\n              \"Neither\"\n            ],\n            \"correctAnswer\": \"Weights\"\n          },\n          {\n            \"question\": \"favorite food?\",\n            \"answers\": [\n              \"spaghetti\",\n              \"tacos\"\n            ],\n            \"correctAnswer\": \"spaghetti\",\n            \"id\": 15\n          },\n          {\n            \"question\": \"favorite food?\",\n            \"answers\": [\n              \"spaghetti\",\n              \"tacos\",\n              \"pizza\",\n              \"burgers\"\n            ],\n            \"correctAnswer\": \"spaghetti\",\n            \"id\": 16\n          },\n          {\n            \"question\": \"do you like pina coladas?\",\n            \"answers\": [\n              \"yes\",\n              \"no\"\n            ],\n            \"correctAnswer\": \"yes\",\n            \"id\": 17\n          },\n          {\n            \"question\": \"are you funny?\",\n            \"answers\": [\n              \"i think so\",\n              \"sometimes\",\n              \"never - humor is stupid\"\n            ],\n            \"correctAnswer\": \"i think so\",\n            \"id\": 18\n          },\n          {\n            \"question\": \"How many days in a year?\",\n            \"answers\": [\n              \"365\",\n              \"256\",\n              \"1200\"\n            ],\n            \"correctAnswer\": \"365\",\n            \"id\": 19\n          },\n          {\n            \"question\": \"How old am I?\",\n            \"answers\": [\n              \"24\",\n              \"32\",\n              \"1\"\n            ],\n            \"correctAnswer\": \"24\",\n            \"id\": 20\n          },\n          {\n            \"question\": \"Cats\",\n            \"answers\": [\n              \"No\"\n            ],\n            \"correctAnswer\": \"No\",\n            \"id\": 21\n          },\n          {\n            \"question\": \"How many chickens does it take to screw in a light bulb?\",\n            \"answers\": [\n              \"1\",\n              \"2\",\n              \"3\"\n            ],\n            \"correctAnswer\": \"1\",\n            \"block\": 0,\n            \"data\": {\n              \"id\": \"13a74ccb-d9d3-423a-a20b-e290e696445e\",\n              \"value\": \"1\"\n            },\n            \"id\": 22\n          },\n          {\n            \"question\": \"How many ducks do i have?\",\n            \"answers\": [\n              \"3\",\n              \"2\",\n              \"1\"\n            ],\n            \"correctAnswer\": \"3\",\n            \"block\": 0,\n            \"data\": {\n              \"id\": \"ef41e3bc-c665-4f08-87f1-a71d99256763\",\n              \"value\": \"3\"\n            },\n            \"id\": 29\n          },\n          {\n            \"question\": \"What does USA stand for?\",\n            \"answers\": [\n              \"United States of America\",\n              \"OOSA\",\n              \"Ball\"\n            ],\n            \"correctAnswer\": \"United States of America\",\n            \"block\": 1,\n            \"data\": {\n              \"id\": \"b8f21c26-faee-41be-a392-42cecd23dc74\",\n              \"value\": \"2\"\n            },\n            \"id\": 30\n          },\n          {\n            \"question\": \"Cats or dogs?\",\n            \"answers\": [\n              \"Dogs\",\n              \"Cats\",\n              \"Pigs\"\n            ],\n            \"correctAnswer\": \"Dogs\",\n            \"block\": 0,\n            \"data\": {\n              \"id\": \"d4d09640-5b75-4803-93db-b0a46eb55857\",\n              \"value\": \"Dogs\"\n            },\n            \"id\": 31\n          },\n          {\n            \"question\": \"Squirrels or Bears?\",\n            \"answers\": [\n              \"Bears\",\n              \"Squirrels\"\n            ],\n            \"correctAnswer\": \"Bears\",\n            \"block\": 1,\n            \"data\": {\n              \"id\": \"b5e32d37-36f5-486d-80a8-d9c12e740471\",\n              \"value\": \"Cats\"\n            },\n            \"id\": 32\n          },\n          {\n            \"question\": \"Water or juice?\",\n            \"answers\": [\n              \"Water\",\n              \"Juice\"\n            ],\n            \"correctAnswer\": \"Water\",\n            \"block\": 2,\n            \"data\": {\n              \"id\": \"353b3118-ae1b-4fd6-9eba-51ec14f894f8\",\n              \"value\": \"Pigs\"\n            },\n            \"id\": 33\n          },\n          {\n            \"question\": \"Squirrels or Bears?\",\n            \"answers\": [\n              \"Bears\",\n              \"Squirrels\"\n            ],\n            \"correctAnswer\": \"Bears\",\n            \"block\": 0,\n            \"data\": {\n              \"id\": \"3b552b51-826a-4551-b68c-7b3801757d65\",\n              \"value\": \"Bears\"\n            },\n            \"id\": 34\n          },\n          {\n            \"question\": \"Squirrels or Bears?\",\n            \"answers\": [\n              \"Bears\",\n              \"Squirrels\"\n            ],\n            \"correctAnswer\": \"Bears\",\n            \"block\": 0,\n            \"data\": {\n              \"id\": \"cad04006-2042-41d7-8e70-0ea0bb3f8f5d\",\n              \"value\": \"Bears\"\n            },\n            \"id\": 35\n          },\n          {\n            \"question\": \"Water or juice?\",\n            \"answers\": [\n              \"Water\",\n              \"Juice\",\n              \"Neither\"\n            ],\n            \"correctAnswer\": \"Water\",\n            \"block\": 1,\n            \"data\": {\n              \"id\": \"2a3dbc49-a18f-4ff2-a40a-f0a2e1b4df92\",\n              \"value\": \"Squirrels\"\n            },\n            \"id\": 36\n          },\n          {\n            \"question\": \"How many chickens does it take to screw in a light bulb?\",\n            \"answers\": [\n              \"3\",\n              \"1\"\n            ],\n            \"correctAnswer\": \"3\",\n            \"block\": 2,\n            \"data\": {\n              \"id\": \"7dbcea1f-f343-417c-af9f-16dc9b034073\",\n              \"value\": \"Water\"\n            },\n            \"id\": 37\n          }\n        ]\n        let questions = []\n        let askedQuestions = []\n        for (let i = 0; i <= 9; i++) {\n\n          let question = data[Math.floor(Math.random() * data.length)]\n          let asked = askedQuestions.filter(each => question.id === each)\n\n          if (asked.length === 0) {\n            questions.push(question)\n            askedQuestions.push(question.id)\n          } else { i-- }\n        }\n        setQuestions(questions)\n      \n\n\n  }\n\n  const userBioRandomiser = () => {\n    let data = [\n      \"Hi! I am brand new to online dating. While I’m still figuring this all out, here’s something I know for sure—I’m excited to be here! The chance to meet unique, engaging, and interesting women is pretty dang neat. If you think you might fit that mold, drop me a message. I work in the finance industry. And while I like to work hard, I make sure to leave time to enjoy life. I’m a fan of wine, movies, hiking, and getting out of town for the weekend. Let’s chat and see if maybe we’re a good fit!\",\n      \"Isn’t online dating a blast? Okay, maybe it can be challenging at times, but it’s still exciting that you have the chance to meet someone special who you might have never met elsewhere. I’m a proud dog mom, an avid gym-goer, and, if you ask my friends, a bit quirky at times. I’m looking for a man who compliments my life and is ready to enjoy all that this world has to bring to the table. If you think we might be a good match, send me a message.\",\n      \"Hi! If I had to pick three words to describe me they would be positive, a little shy, and someone who loves to laugh. Okay, that was a few more than three words, but it’s fun to break the rules from time to time, right? I’m new to online dating, but I know what I’m looking for in a man. My Christian faith is important to me, so I want to find a man who feels the same way. Additionally, I’m really into movies, so a guy who likes to cuddle up on the couch instead of going out on a Friday night is the right match for me. If you think maybe we could be right for each other, send me a message! I’m kind of shy, but if you reach out, I come out of my shell.\",\n      \"Hi, I’m Ted! Thanks for stopping by my online dating profile. I’m not the best at describing myself, so I reached out to a few friends and asked them to tell me what I’m like so I could share that with you. Here’s what they had to say. Ted is driven, goal-oriented, and goes after what he wants in life.Ted is a real catch. He’s caring, dependable, and someone who could really be your rock. If you want to see if my friends are right or they’re just telling me what I want to hear (kidding), we should chat! Send me a message and let’s start the conversation..\",\n      \"Hi, I'm Joe. I'm an attorney by day, and in my spare time, I'm writing my first novel. Training for the next marathon is my go-to stress relief. I'm an avid reader of the Economist and the Atlantic. I keep up-to-date with politics but try to stay out of the drama. Early morning meditation is my spiritual practice. My ex-wife and I co-parent our two kids. I'm here on this app to meet you so can you do me one favor to help me out? I have a quick question for you to answer. What's the first date you've always wanted to go on and have never come close to? Click the message button and let me know!\",\n      \"Hi, I'm Sam. I own my own Software Development company. I love jazz and go watch my favorite bands as often as possible. To get out of my head, I go rock climbing. I grew up in a very political family and I carry on that tradition by being active in the local campaigns. I find a lot of peace by attending church on Sunday mornings and by being a part of that community. I've been in a couple of great long term relationships and am ready to find someone special to build a life with. Send me a message and let me know what your favorite type of food is. I know the best spots in town!\"\n    ]\n      setUserBio(data[Math.floor(Math.random() * data.length)])\n      \n\n  }\n  const retrieveActivities = () => {\n    let data = [\n      \"Rogue Lawnmowing\",\n      \"Woodworking\",\n      \"Croquet\",\n      \"Sculpting\",\n      \"Ax Throwing\",\n      \"Weight Lifting\",\n      \"Chess\",\n      \"Crocheting\",\n      \"Video Game Collecting\",\n      \"jogging\",\n      \"Scrapbooking\",\n      \"Bird Watching\",\n      \"Storm Chasing\",\n      \"Bullion Collecting\",\n      \"Needlepoint\",\n      \"Soap Making\",\n      \"ButterFly Watching\",\n      \"Tennis\"\n    ]\n        let activities = []\n        for (let i = 0; i <= 3; i++) {\n          activities.push(data[Math.floor(Math.random() * data.length)])\n        }\n        setActivities(activities)\n\n  }\n  const createUserInfo = () => {\n    setLoading(true)\n    let options = ['male', 'female']\n    let preference = loggedInUser.preference === \"Both\" ? Math.floor(Math.random() * options.length) : loggedInUser.preference.toLowerCase()\n    console.log('preference', loggedInUser.preference === \"Both\" ? options[preference] : loggedInUser.preference.toLowerCase())\n    fetch(`${userInfoAPI}?gender=${loggedInUser.preference === \"Both\" ? options[preference] : loggedInUser.preference.toLowerCase()}`)\n      .then(resp => resp.json())\n      .then(data => {\n        fetchUserdata(loggedInUser.preference === \"Both\" ? options[preference] : loggedInUser.preference.toLowerCase())\n        setUserInfo(data)\n      })\n      .catch(err => console.error(err))\n\n  }\n  const fetchUserdata = (preference) => {\n    fetch(`${apiLink}/photos/random?query=${preference}&client_id=21gTlhq_CUWz1HLMpJCV9YkjWdxt1mlGo36uQXMsL7g`)\n      .then(resp => resp.json())\n      .then(data => {\n        setLoading(false)\n        setPhoto(data.urls.small)\n      })\n      .catch(err => console.error(err))\n\n\n  }\n  const updateLoggedInUser = (update) => {\n    setLoggedInUser(update)\n  }\n\n  const logout = () => {\n    setIsLoggedIn(false)\n    setLoggedInUser('')\n  }\n  return (\n    <div>\n\n      <Router basename={\"/CompatabL\"}>\n\n        <Navbar className='nav-bar'>\n          <img src={Logo} alt='CompatabL Logo' style={{ width: '15%', borderRadius: '25px', marginLeft: '5px' }} />\n          <div className='nav-container'>\n            {isLoggedIn && <Link to='/'>\n              <Button variant='primary'>Home</Button>\n            </Link>}\n            {!isLoggedIn && <Link to='/signup'>\n              <Button className='nav-button' variant=\"primary\">Signup</Button>\n            </Link>}\n            {isLoggedIn && <Link to='/'>\n              <Button className='nav-button' onClick={() => logout()} variant=\"danger\">Logout</Button>\n            </Link>}\n            {isLoggedIn && <Link to='/profile'>\n              <Button onClick={() => matchUpdate(false)} className='nav-button' variant=\"secondary\">{loggedInUser.firstName}</Button>\n            </Link>}\n            {!isLoggedIn && <Link to='/login'>\n              <Button className='nav-button' variant=\"secondary\">Log In</Button>\n            </Link>}\n          </div>\n        </Navbar>\n\n\n        <Switch>\n          <Route path='/quiz'>\n            <Quiz loggedInUser={loggedInUser} calculateScore={calculateScore} score={score} renderScore={renderScore} questions={questions} photo={photo} userInfo={userInfo} userBio={userBio} activities={activities} />\n          </Route>\n\n          <Route exact path=\"/\">\n            {isLoggedIn ? <Redirect to='/compatabl' /> : <Login login={login} />}\n          </Route>\n\n          <Route exact path=\"/compatabl\">\n            <>\n              <SwipeContainer loading={loading} randomiseUser={randomiseUser} userBio={userBio} activities={activities} userInfo={userInfo} photo={photo} />\n              <LikeDislikeContainer saveSelectedUser={saveSelectedUser} randomiseUser={randomiseUser} />\n            </>\n          </Route>\n\n          <Route exact path=\"/profile\">\n            { !loading && <Profile matchProfileUpdate={matchUpdate} updateLoggedInUser={updateLoggedInUser} match={matchProfile} user={loggedInUser} />}\n          </Route>\n\n          <Route exact path=\"/signup\">\n            <Signup submitUserSignup={submitUserSignup} />\n          </Route>\n\n          <Route exact path=\"/login\">\n            <Login accountCreated={accountCreated} login={login} />\n          </Route>\n          <Route path='*' exact={true}  >\n              <RouteNotFound />\n            </Route>\n\n\n        </Switch>\n      </Router>\n\n\n    </div>\n  )\n}\nexport default Application\n\n//https://api.unsplash.com/photos/?client_id=YOUR_ACCESS_KEY","import './App.css';\nimport Application from './Application'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Application />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}